VARIABLE B_ASIGNACION_A NUMBER;
VARIABLE B_ASIGNACION_B NUMBER;
VARIABLE B_ASIGNACION_C NUMBER;
VARIABLE B_ASIGNACION_D NUMBER;
VARIABLE B_ASIGNACION_E NUMBER;

----- VARIABLES BIND -----
DECLARE 
    V_MIN   VENDEDOR.VENDEDOR_ID%TYPE;
    V_MAX   VENDEDOR.VENDEDOR_ID%TYPE;
    
    V_NOMBRE_VENDEDOR   VENDEDOR.VENDEDOR_NOMBRE%TYPE;
    
    V_CANTIDAD_VENTAS   NUMBER;
    
    V_SUCURSAL_ID   VENDEDOR.FK_SUCURSAL_ID%TYPE;
    V_NOMBRE_SUCURSAL   SUCURSAL.SUCURSAL_NOMBRE%TYPE;
    V_NOMBRE_ZONA   ZONA_SUCURSAL.DESCRIPCION%TYPE;
    
    V_SUELDO_VENDEDOR   VENDEDOR.SUELDO_BRUTO%TYPE;
    
    V_VENTAS_NETAS  NUMBER;
    V_VENTA_ID      VENTA.VENTA_ID%TYPE;
    
    V_ASIG_CANT_VENTAS   NUMBER;
    
    V_ASIG_CERTIFICACION    NUMBER;
    V_PORC_CERTIFICACION    NUMBER;
    V_COD_CERTIFICACION     CERTIFICACION.CODIGO%TYPE;
    V_TIPO_CERTIFICACION    CERTIFICACION.NOMBRE%TYPE;
    
    V_ASIG_POR_SUELDO   NUMBER;
    V_VALOR_PORCENTAJE  NUMBER;
    
    V_FECHA_DE_CONTRATO   VENDEDOR.VENDEDOR_FECHA_CONTRATO%TYPE;
    V_ANNO_DE_CONTRATO      NUMBER;
    V_PORCENTAJE_ANNIO  ANIOS_CONTRATO.VALOR_PORCENTAJE%TYPE;
    V_ASIG_ANIOS_CONTRATO   NUMBER;
    
    V_SUELDO_NETO_VENDEDOR     NUMBER;
    
    V_SUELDO_BRUTO_VENDEDOR     NUMBER;
   
    V_CODIGO_AFP    VENDEDOR.FK_COD_AFP%TYPE;
    V_PORCENTAJE_AFP    DESCUENTO_AFP.PORC_DESCTO_AFP%TYPE;
    V_DESCUENTO_AFP     NUMBER;
    
    V_CODIGO_SALUD  VENDEDOR.FK_COD_SALUD%TYPE;
    V_PORCENTAJE_SALUD    DESCUENTO_SALUD.PORC_DESCTO_SALUD%TYPE;
    V_DESCUENTO_SALUD     NUMBER;
    
    

BEGIN 
-----------------------------------------
    :B_ASIGNACION_A:=15;
    :B_ASIGNACION_C:=10;
    :B_ASIGNACION_B:=12;
    :B_ASIGNACION_D:=8;
    :B_ASIGNACION_E:=5;
    
-------------------------------------
    SELECT MIN(VENDEDOR_ID),
            MAX(VENDEDOR_ID)
    INTO    V_MIN,
            V_MAX
    FROM VENDEDOR;
    
    WHILE V_MIN <= V_MAX LOOP
    -----------------------------------
        SELECT VENDEDOR_NOMBRE,
                FK_SUCURSAL_ID,
                SUELDO_BRUTO,
                CODIGO_CERTIFACION,
                VENDEDOR_FECHA_CONTRATO,
                FK_COD_AFP,
                FK_COD_SALUD
        INTO   V_NOMBRE_VENDEDOR,
                V_SUCURSAL_ID,
                V_SUELDO_VENDEDOR,
                V_COD_CERTIFICACION,
                V_FECHA_DE_CONTRATO,
                V_CODIGO_AFP,
                V_CODIGO_SALUD
        FROM VENDEDOR
        WHERE VENDEDOR_ID = V_MIN
        ;
    -----------------------------------
        SELECT COUNT(VENTA_ID)
        INTO    V_CANTIDAD_VENTAS
        FROM VENTA
        WHERE FK_VENDEDOR_ID = V_MIN
        ; 
    -----------------------------------
        SELECT ZS.DESCRIPCION,
                SC.SUCURSAL_NOMBRE
        INTO    V_NOMBRE_ZONA,
                V_NOMBRE_SUCURSAL
        FROM SUCURSAL SC LEFT JOIN ZONA_SUCURSAL ZS ON(SC.ZONA_ID = ZS.CODIGO)
        WHERE SC.SUCURSAL_ID = V_SUCURSAL_ID
        ;
     ----------------------------------
        BEGIN
            SELECT NVL(SUM(COUNT(DV.FK_PROPIEDAD_ID)*PP.PROPIEDAD_PRECIO),0)
            INTO V_VENTAS_NETAS
            FROM VENDEDOR VD LEFT JOIN VENTA VT ON (VD.VENDEDOR_ID = VT.FK_VENDEDOR_ID)
                                LEFT JOIN DETALLE_VENTA DV ON (VT.VENTA_ID = DV.FK_VENTA_ID)
                                LEFT JOIN PROPIEDAD PP ON (DV.FK_PROPIEDAD_ID = PP.PROPIEDAD_ID)
            WHERE VD.VENDEDOR_ID = V_MIN
            GROUP BY VD.VENDEDOR_ID,VT.VENTA_ID,PP.PROPIEDAD_PRECIO
            ; 
         EXCEPTION
            WHEN OTHERS THEN
                DBMS_OUTPUT.PUT_LINE('SE HA PRODUCIDO UN ERROR: '||V_MIN);
                    DBMS_OUTPUT.PUT_LINE('USUARIO: '||USER);
                    DBMS_OUTPUT.PUT_LINE('MOTIVO: '||SYSDATE);
                    DBMS_OUTPUT.PUT_LINE(' DENTRO DEL BLOQUE'); 
                    
                   V_VENTAS_NETAS:=0; 
         END;   
   ---------------------------------------------
        
        IF V_CANTIDAD_VENTAS >= 10 THEN
            V_ASIG_CANT_VENTAS:= V_VENTAS_NETAS * :B_ASIGNACION_A / 100;
        ELSIF V_CANTIDAD_VENTAS BETWEEN 8 AND 9 THEN
            V_ASIG_CANT_VENTAS:= V_VENTAS_NETAS * :B_ASIGNACION_B / 100;
        ELSIF V_CANTIDAD_VENTAS BETWEEN 6 AND 7 THEN
            V_ASIG_CANT_VENTAS:= V_VENTAS_NETAS * :B_ASIGNACION_C / 100;
        ELSIF V_CANTIDAD_VENTAS BETWEEN 3 AND 5 THEN
            V_ASIG_CANT_VENTAS:= V_VENTAS_NETAS * :B_ASIGNACION_D / 100;
        ELSIF V_CANTIDAD_VENTAS BETWEEN 1 AND 2 THEN
            V_ASIG_CANT_VENTAS:= V_VENTAS_NETAS * :B_ASIGNACION_E / 100;
        ELSE
            V_ASIG_CANT_VENTAS:= 0;
        END IF;
------------------------------------------------
        SELECT  PORCENTAJE,
                NOMBRE
        INTO    V_PORC_CERTIFICACION,
                V_TIPO_CERTIFICACION
        FROM CERTIFICACION
        WHERE CODIGO = V_COD_CERTIFICACION
        ;
        
        V_ASIG_CERTIFICACION:=  V_SUELDO_VENDEDOR * V_PORC_CERTIFICACION / 100;
       -------------------------------------------------
       
       SELECT   VALOR_PORCENTAJE
           INTO V_VALOR_PORCENTAJE
           FROM RANGO_SUELDO
           WHERE    V_SUELDO_VENDEDOR BETWEEN VALOR_INFERIOR AND VALOR_SUPERIOR
           ;
       IF V_CANTIDAD_VENTAS >= 1 THEN
           V_ASIG_POR_SUELDO:=  V_SUELDO_VENDEDOR * V_VALOR_PORCENTAJE / 100;
       ELSE
           V_ASIG_POR_SUELDO:= 0; 
        END IF;
        
------------------------------------------------------------
        V_ANNO_DE_CONTRATO:= TRUNC(MONTHS_BETWEEN(SYSDATE,V_FECHA_DE_CONTRATO)/12);

        SELECT  VALOR_PORCENTAJE
        INTO    V_PORCENTAJE_ANNIO
        FROM    ANIOS_CONTRATO
        WHERE   V_ANNO_DE_CONTRATO BETWEEN VALOR_INFERIOR AND VALOR_SUPERIOR
        ;
        
        V_ASIG_ANIOS_CONTRATO:= V_SUELDO_VENDEDOR * V_PORCENTAJE_ANNIO / 100;
 --------------------------------------------------  
 
        V_SUELDO_NETO_VENDEDOR:= V_SUELDO_VENDEDOR + V_ASIG_CANT_VENTAS + V_ASIG_CERTIFICACION + V_ASIG_POR_SUELDO + V_ASIG_ANIOS_CONTRATO; 
 
 -------------------------------------------------
        
        SELECT  PORC_DESCTO_AFP
        INTO    V_PORCENTAJE_AFP
        FROM    DESCUENTO_AFP
        WHERE   COD_AFP = V_CODIGO_AFP
        ;
        
        V_DESCUENTO_AFP:= ROUND(V_SUELDO_NETO_VENDEDOR * V_PORCENTAJE_AFP / 100);
        
 --------------------------------------------------
 
        SELECT  PORC_DESCTO_SALUD
        INTO    V_PORCENTAJE_SALUD
        FROM    DESCUENTO_SALUD
        WHERE   COD_SALUD = V_CODIGO_SALUD
        ;
 
        V_DESCUENTO_SALUD:= ROUND(V_SUELDO_NETO_VENDEDOR * V_PORCENTAJE_SALUD / 100);
 -------------------------------------------------
 
        V_SUELDO_BRUTO_VENDEDOR:= V_SUELDO_NETO_VENDEDOR - (V_DESCUENTO_AFP + V_DESCUENTO_SALUD);
 
 -----------------------------------------------------
        DBMS_OUTPUT.PUT_LINE('---------------');
        DBMS_OUTPUT.PUT_LINE('ID: '||V_MIN);
        DBMS_OUTPUT.PUT_LINE('NOMBRE VENDEDOR: '||V_NOMBRE_VENDEDOR);
        DBMS_OUTPUT.PUT_LINE('NOMBRE DE SUCURSAL: '||V_NOMBRE_SUCURSAL);
        DBMS_OUTPUT.PUT_LINE('ZONA SUCURSAL: '||V_NOMBRE_ZONA);
        DBMS_OUTPUT.PUT_LINE('SUELDO VENDEDOR: '||V_SUELDO_VENDEDOR);
        DBMS_OUTPUT.PUT_LINE('CANTIDAD DE VENTAS: '||V_CANTIDAD_VENTAS);
        DBMS_OUTPUT.PUT_LINE('VENTAS NETAS: '||V_VENTAS_NETAS);
        DBMS_OUTPUT.PUT_LINE('TIPO DE CERTIDICACION: '||V_TIPO_CERTIFICACION);
        DBMS_OUTPUT.PUT_LINE('AÑOS DE CONTRATO: '||V_ANNO_DE_CONTRATO);
        DBMS_OUTPUT.PUT_LINE('ASIGNACION POR CANTIDAD DE VENTAS: '||V_ASIG_CANT_VENTAS);
        DBMS_OUTPUT.PUT_LINE('ASIGNACION POR CERTIFICACION: '||V_ASIG_CERTIFICACION);
        DBMS_OUTPUT.PUT_LINE('ASIGNACION POR SUELDO: '||V_ASIG_POR_SUELDO);
        DBMS_OUTPUT.PUT_LINE('ASIGNACION POR AÑOS DE CONTRATO: '||V_ASIG_ANIOS_CONTRATO);
        DBMS_OUTPUT.PUT_LINE('SUELDO NETO VENDEDOR: '||V_SUELDO_NETO_VENDEDOR);
        DBMS_OUTPUT.PUT_LINE('DESCUENTO DE AFP: '||V_DESCUENTO_AFP);
        DBMS_OUTPUT.PUT_LINE('DESCUENTO DE SALUD: '||V_DESCUENTO_SALUD);
        DBMS_OUTPUT.PUT_LINE('SUELDO BRUTO VENDEDOR: '||V_SUELDO_BRUTO_VENDEDOR);
        
        V_MIN:= V_MIN + 1;
    END LOOP; 
    
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('TENEMOS UN PROBLEMA HOUSTON');     
END
;
